// js/ui/home.js
import { state } from '../state.js';
import { getReviewableWords } from '../data.js';

// C·∫•u h√¨nh c√°c √¥ ch·ª©c nƒÉng (ti√™u ƒë·ªÅ, m√¥ t·∫£, m√†n h√¨nh, m√†u accent, icon)
const FEATURES = [
  { title: 'H·ªçc Theo G·ª£i √ù', sub: 'T·∫≠p trung v√†o t·ª´ kh√≥ v√† t·ª´ m·ªõi', screen: 'suggestion-screen', accent: 'violet', icon: '‚ú®' },
  { title: 'ƒê√°nh V·∫ßn', sub: 'Luy·ªán k·ªπ nƒÉng vi·∫øt ƒë√∫ng ch√≠nh t·∫£', screen: 'spelling-screen', accent: 'blue', icon: '‚úçÔ∏è' },
  { title: 'Flashcard', sub: 'H·ªçc t·ª´ v·ªõi th·∫ª ghi nh·ªõ', screen: 'reading-screen', accent: 'teal', icon: 'üÉè' },
  { title: 'Tr·∫Øc Nghi·ªám', sub: 'Ch·ªçn nghƒ©a ƒë√∫ng c·ªßa t·ª´', screen: 'mcq-screen', accent: 'blue', icon: 'üìù' },
  { title: 'Nh·ªõ T·ª´ M·ªõi', sub: 'Ch·ªçn t·ª´ ƒë√∫ng trong c√°c t·ª´', screen: 'remember-word-screen', accent: 'green', icon: '‚úÖ' },
  { title: 'S·∫Øp X·∫øp Ch·ªØ', sub: 'T·∫°o th√†nh t·ª´ ƒë√∫ng', screen: 'scramble-screen', accent: 'amber', icon: 'üî§' },
  { title: 'S·∫Øp X·∫øp Ch·ªØ (t√≠nh gi·ªù)', sub: 'Li√™n t·ª•c t·ªõi khi h·∫øt gi·ªù', screen: 'timed-scramble-screen', accent: 'amber', icon: '‚è±Ô∏è' },
  { title: 'ƒêi·ªÅn t·ª´', sub: 'Ho√†n th√†nh c√¢u v·ªõi t·ª´ ƒë√∫ng', screen: 'fill-blank-screen', accent: 'teal', icon: 'üß©' },
  { title: 'Luy·ªán Thi', sub: 'Ki·ªÉm tra ki·∫øn th·ª©c t·ªïng h·ª£p', screen: 'exam-screen', accent: 'violet', icon: 'üìö' },
  { title: 'N·ªëi T·ª´ (Word Match)', sub: 'Gh√©p t·ª´ v·ªõi nghƒ©a ƒë√∫ng', screen: 'word-match-screen', accent: 'green', icon: 'üîó' },
  { title: 'ƒêo√°n Ch·ªØ', sub: 'ƒêo√°n ch·ªØ c√°i c·ªßa t·ª´', screen: 'hangman-screen', accent: 'amber', icon: 'üéØ' },
  { title: 'Luy·ªán Nghe', sub: 'Nghe v√† g√µ l·∫°i t·ª´', screen: 'listening-screen', accent: 'rose', icon: 'üéß' },
  { title: 'Ph√°t √Çm', sub: 'Ki·ªÉm tra ph√°t √¢m c·ªßa b·∫°n', screen: 'pronunciation-screen', accent: 'rose', icon: 'üéôÔ∏è' },
];

export function renderHomeTab() {
  const container = document.getElementById('home-tab');
  if (!container) return;

  const profileName = state.appData.profileName || 'B·∫°n';
  const streak = state.appData.streak || 0;
  const avatarSrc =
    state.appData.avatarUrl ||
    `https://ui-avatars.com/api/?name=${encodeURIComponent(profileName)}&background=random&color=fff`;

  const reviewCount = getReviewableWords().length;
  const { type, value } = state.appData.settings?.dailyGoal || { type: 'words', value: 20 };
  const { words, minutes } = state.appData.dailyProgress || { words: 0, minutes: 0 };
  const progressValue = type === 'words' ? words : Math.floor(minutes);
  const progressPercentage = value > 0 ? Math.min(100, (progressValue / value) * 100) : 0;

  container.innerHTML = `
    <header class="flex justify-between items-center mb-6">
      <div>
        <h1 class="text-2xl lg:text-3xl font-bold">Ch√†o, ${profileName}!</h1>
        <p class="text-gray-500 dark:text-gray-400">S·∫µn s√†ng ƒë·ªÉ h·ªçc ch∆∞a?</p>
      </div>
      <div class="flex items-center gap-3">
        <div class="text-center">
          <div class="text-3xl lg:text-4xl">üî•</div>
          <div class="font-bold text-orange-500">${streak}</div>
        </div>
        <img src="${avatarSrc}" alt="Avatar" class="w-12 h-12 rounded-full object-cover border-2 border-indigo-200 dark:border-indigo-800">
      </div>
    </header>

    <!-- Hero: √în t·∫≠p h√¥m nay -->
    <section class="hero cursor-pointer" onclick="showGameScreen('review-screen')">
      <div class="flex justify-between items-start">
        <div>
          <div class="opacity-90">√în t·∫≠p h√¥m nay</div>
          <div class="font-extrabold text-4xl leading-none mt-1">${reviewCount} t·ª´</div>
          <div class="opacity-85 mt-1 text-sm">M·ª•c ti√™u ng√†y: ${progressValue}/${value} ${type === 'words' ? 't·ª´' : 'ph√∫t'}</div>
        </div>
        <button class="rounded-xl px-3 py-2 font-bold bg-white/15 border border-white/25">Ti·∫øp t·ª•c √¥n</button>
      </div>
      <div class="progress mt-3"><span style="width:${progressPercentage}%;"></span></div>
    </section>

    <h3 class="section-title mt-6">Luy·ªán t·∫≠p</h3>

    <!-- L∆∞·ªõi ch·ª©c nƒÉng -->
    <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
      ${FEATURES.map(f => `
        <a data-accent="${f.accent}" href="javascript:void(0)" onclick="showGameScreen('${f.screen}')">
          <div class="feature">
            <div class="icon">${f.icon}</div>
            <div>
              <div class="title">${f.title}</div>
              <div class="subtitle">${f.sub}</div>
            </div>
            <div class="chev">‚Ä∫</div>
          </div>
        </a>
      `).join('')}
    </div>
  `;
}
